version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: subtitle-cleaner-api
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      - APP_ENV=${APP_ENV:-development}
      - APP_NAME=${APP_NAME:-subtitle-cleaner}
      - APP_VERSION=${APP_VERSION:-0.1.0}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_PREFIX=${API_PREFIX:-/v1}
      - API_KEYS=${API_KEYS:-test-api-key-123,dev-api-key-456}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/subtitle_cleaner}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - API_KEY_HEADER=${API_KEY_HEADER:-X-API-Key}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - RATE_LIMIT_PERIOD=${RATE_LIMIT_PERIOD:-60}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-10}
      - MAX_SEGMENTS=${MAX_SEGMENTS:-10000}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-en}
      # Enhanced Features (Layers 4-6)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-150}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.0}
      - ENABLE_RETRIEVAL=${ENABLE_RETRIEVAL:-true}
      - ENABLE_LLM_SELECTION=${ENABLE_LLM_SELECTION:-false}
      - ENABLE_TENANT_MEMORY=${ENABLE_TENANT_MEMORY:-true}
      - RETRIEVAL_MAX_SPANS=${RETRIEVAL_MAX_SPANS:-5}
      - RETRIEVAL_MIN_SOURCES=${RETRIEVAL_MIN_SOURCES:-2}
      - LLM_CONFIDENCE_THRESHOLD=${LLM_CONFIDENCE_THRESHOLD:-0.7}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - subtitle-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  db:
    image: postgres:16-alpine
    container_name: subtitle-cleaner-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=subtitle_cleaner
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    networks:
      - subtitle-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d subtitle_cleaner"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: subtitle-cleaner-redis
    command: >
      redis-server
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy ${REDIS_EVICTION_POLICY:-allkeys-lru}
      --appendonly ${REDIS_PERSISTENCE:-no}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - subtitle-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

networks:
  subtitle-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local